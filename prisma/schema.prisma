generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Hand {
  LEFT
  RIGHT
}

enum PitchResult {
  BALL
  CALLED_STRIKE
  SWINGING_STRIKE
  FOUL
  BUNT_STRIKE
  IN_PLAY
}

enum Result {
  STRIKE_OUT_SWINGING
  STRIKE_OUT_LOOKING
  WALK
  HIT_BY_PITCH
  HIT
  OUT
  NONE
}

enum Hit {
  GROUND_BALL
  FLY_BALL
  LINE_DRIVE
  POP_UP
  BUNT
}

model Pitcher {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  number  Int
  hand    Hand
  ranking Int
  team    Team    @relation(fields: [teamId], references: [id])
  teamId  Int
  Atbat   Atbat[]

  @@unique([teamId, number])
}

model Team {
  id       Int       @id @default(autoincrement())
  school   String    @unique
  name     String    @unique
  pitchers Pitcher[]
  Game     Game[]
}

model Pitch {
  id       Int         @id @default(autoincrement())
  number   Int
  fastball Boolean
  inzone   Boolean
  result   PitchResult
  atbat    Atbat       @relation(fields: [atbatId], references: [id])
  atbatId  Int
}

model Atbat {
  id        Int     @id @default(autoincrement())
  position  Int?
  hit       Hit?
  speed     Int?
  result    Result
  bases     Int
  inning    Int
  outs      Int
  pitcher   Pitcher @relation(fields: [pitcherId], references: [id])
  pitcherId Int
  batter    Batter  @relation(fields: [batterId], references: [id])
  batterId  Int
  runners   String
  pitches   Pitch[]
  game      Game    @relation(fields: [gameId], references: [id])
  gameId    Int
}

model Game {
  id         Int     @id @default(autoincrement())
  date       String  @unique
  opponent   Team    @relation(fields: [opponentId], references: [id])
  opponentId Int
  atbats     Atbat[]
}

model Batter {
  id     Int     @id @default(autoincrement())
  number Int     @unique
  name   String  @unique
  year   Int
  Atbat  Atbat[]
}
